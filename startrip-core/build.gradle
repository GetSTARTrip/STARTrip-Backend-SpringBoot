plugins {
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group 'com.startrip'
version 'unspecified'

repositories {
    mavenCentral()
}

// 공통 코드
bootJar { enabled = false }
jar { enabled = true }

dependencies {

    // Config
    implementation 'org.springframework.cloud:spring-cloud-starter-config:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.6.2'

    // Swagger
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    // DB 관련 의존성
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    runtimeOnly 'com.h2database:h2'
    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb' //mongo

    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    implementation 'org.json:json:20200518'
    // jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.3'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.3'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.3'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security:2.6.7'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // OAuth

    //log4j2
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.10.3'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.security:spring-security-test:5.6.2'
}

bootBuildImage {
    builder = 'paketobuildpacks/builder:tiny'
    environment = ['BP_NATIVE_IMAGE': 'true']
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}


test {
    useJUnitPlatform()
}