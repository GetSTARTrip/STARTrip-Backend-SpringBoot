plugins {
    id 'java'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group 'com.startrip'
version 'unspecified'

repositories {
    mavenCentral()
}

// 공통 코드
bootJar { enabled = false }
jar { enabled = true }

dependencies {
    // Config
    compileOnly 'org.springframework.cloud:spring-cloud-starter-config:3.1.0'

    // JWT 관련 의존성
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    // DB 관련 의존성
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'com.h2database:h2'
    compileOnly 'org.postgresql:postgresql'
    compileOnly 'org.springframework.boot:spring-boot-starter-data-mongodb' //mongo

    compileOnly "com.querydsl:querydsl-jpa:${queryDslVersion}"
    compileOnly "com.querydsl:querydsl-apt:${queryDslVersion}"

    compileOnly 'org.json:json:20200518'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Security
    compileOnly 'org.springframework.boot:spring-boot-starter-security:2.6.7'
    compileOnly 'org.springframework.boot:spring-boot-starter-oauth2-client' // OAuth

    //log4j2
    compileOnly 'org.springframework.boot:spring-boot-starter-log4j2'
    compileOnly group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.10.3'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnly 'org.springframework.security:spring-security-test:5.6.2'
}

//    bootBuildImage {
//        builder = 'paketobuildpacks/builder:tiny'
//        environment = ['BP_NATIVE_IMAGE': 'true']
//    }

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}


test {
    useJUnitPlatform()
}